{"version":3,"file":"qtiled.dev.js","sources":["../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../src/utils.js","../../../src/tile-neighbors.js","../../../src/astar.js","../../../src/index.js"],"sourcesContent":["export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/* 根据行列数设定，取得对应元坐标集合\n* @param {Number}   column       列数\n* @param {Number}   row          行数\n* @param {Function} processor    加工：可以用于将单位为1的坐标值换算为目标值或对象\n* @param {Function} filter       过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const ret = [];\n  const halfCol = Math.round(column / 2);\n  const halfRow = Math.round(row / 2);\n  for(let x = 1; x <= column; x++) {\n    const xId = x - halfCol;\n    for(let y = 1; y <= row; y++) {\n      const yId = y - halfRow;\n      filter(xId, yId, x, y, column, row) && ret.push(processor(xId, yId, x, y, column, row));\n    }\n  }\n  return ret;\n};\n\n/* 根据行列数设定，取得与其最近的邻居元坐标集合\n* @param {Number}   column    列数\n* @param {Number}   row       行数\n* @param {Function} filter    过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getNeighbourUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  return getUnitsByRowCol(\n    column + 2,\n    row + 2,\n    processor,\n    (xId, yId, x, y, column, row)=>filter(xId, yId, x, y, column, row) && (x === 1 || x === column || y === 1 || y === row)\n  );\n};\n\n/* 根据斜对角元素数设定，取得斜对角范围内的错列元坐标集合（可用于将正规布局裁切掉四个角，生成菱形布局）\n* @param {Number}   column    列数\n* @param {Number}   row       行数\n* @param {Function} filter    过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getDiagonalUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const halfCol = Math.round(column / 2) - column % 2;\n  const halfRow = Math.round(row / 2) - row % 2;\n  return getUnitsByRowCol(\n    column,\n    row,\n    processor,\n    (xId, yId, x, y, column, row)=>filter(xId, yId, x, y, column, row) && Math.abs(xId) / halfCol + Math.abs(yId) / halfRow <= 1\n  );\n}\n\n/* 根据设定的起始点与结束点，取得这两点作为对角线对应矩形范围内的元坐标集合\n* @param {Array}   startUnitXY  X、Y元坐标值\n* @param {Array}   endUnitXY    X、Y元坐标值\n* @return {Array}  元坐标集合\n*/\nexport function getUnitsByDiagonal (startUnitXY = [], endUnitXY = [], processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const [startX = 0, startY = 0] = startUnitXY;\n  const [endX = 0, endY = 0] = endUnitXY;\n  const minX = Math.min(startX, endX);\n  const maxX = Math.max(startX, endX);\n  const minY = Math.min(startY, endY);\n  const maxY = Math.max(startY, endY);\n  const ret = [];\n  for(let xId = minX; xId <= maxX; xId++) {\n    for(let yId = minY; yId <= maxY; yId++) {\n      filter(xId, yId, minX, minY, maxX, maxY, startUnitXY, endUnitXY) && ret.push(processor(xId, yId, minX, minY, maxX, maxY, startUnitXY, endUnitXY));\n    }\n  }\n  return ret;\n}\n\n/* 根据设定角度，将指定的坐标绕原点旋转，并返回旋转后的坐标值\n* @param {Array}   unitXY   X、Y元坐标值\n* @param {Number}  angle    要旋转的角度值\n* @return {Array}  旋转后的坐标值\n*/\nconst oneArc = Math.PI / 180;\nexport function rotateUnit (unitXY = [], angle = 0) {\n  const [x = 0, y = 0] = unitXY;\n\n  // 角度转弧度\n const arc = angle * oneArc;\n  // 弧度转正余弦(考虑浮点溢出精度问题，这里 *10 计算后使用 Math.round 取整回去)\n  const sinv = Math.sin(arc) * 10;\n  const cosv = Math.cos(arc) * 10;\n\n  // 计算得到新坐标点\n  return [Math.round(x * cosv - y * sinv) / 10, Math.round(x * sinv + y * cosv) / 10];\n}\n\n/* 根据元坐标、渲染宽高、原点像素坐标，取得矩形元素渲染时的像素坐标\n* @param {Array}   unitXY   X、Y元坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的像素值\n*/\nexport function unit2pixel (unitXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return unitXY.map((XY, i)=>_half_precision(XY * size[i] + originXY[i]));\n}\n// 精确到0.5个单位\nexport function _half_precision (v) {\n  return Math.round(v * 2) / 2;\n}\n/* 根据像素坐标、渲染宽高、原点像素坐标，取得元坐标\n* @param {Array}   pixelXY   X、Y像素坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的元坐标\n*/\nexport function pixel2unit (pixelXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return pixelXY.map((XY, i)=> _half_precision((XY - originXY[i]) / size[i]));\n}\n\n/* 将像素坐标按照tile宽高取整\n* @param {Array}   pixelXY  X、Y像素坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的元坐标\n*/\n/* export function pixelRound (pixelXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return pixelXY.map((XY, i)=> _half_precision( (XY-originXY[i])/size[i] ) );\n}\n*/\n/* 根据元坐标、菱形X-Y两个方向对角线长度、原点像素坐标，取得正菱形元素渲染时的像素坐标\n* @param {Array}   unitXY    X、Y 元坐标值\n* @param {Array}   diagonal  x, y 轴对应对角线长度值\n* @param {Array}   originXY  基准像素点的X、Y像素坐标值\n* @return {Array}  x,y 对应的像素值\n*/\nconst sqrt2 = Math.sqrt(2);\n// 45度的正余弦值\nconst sincos45 = sqrt2 / 2;\n// 元坐标45度变换后的差值补充\nconst unitDiff = -1 / sqrt2;\nexport function unit2rhombusPixel (unitXY = [], diagonal = [], originXY = []) {\n  const [X = 0, Y = 0] = unitXY;\n  const [W = 10, H = 10] = diagonal;\n  const [ox = 0, oy = 0] = originXY;\n\n  // 45度变换\n  const x = (X - Y) * sincos45;\n  const y = (X + Y) * sincos45;\n\n  // 变换后的元坐标换算为像素坐标\n  const pixelX = _half_precision(x * unitDiff * W + ox);\n  const pixelY = _half_precision(y * unitDiff * H + oy);\n\n  return [pixelX, pixelY];\n}\n\n/* 根据像素坐标、菱形X-Y两个方向对角线长度、原点像素坐标，取得正菱形元坐标\n* @param {Array}   pixelXY    X、Y 像素坐标值\n* @param {Array}   diagonal  x, y 轴对应对角线长度值\n* @param {Array}   originXY  基准像素点的X、Y像素坐标值\n* @return {Array}  x,y 对应元坐标值\n*/\nexport function rhombusPixel2unit (pixelXY = [], diagonal = [], originXY = []) {\n  const [pixelX = 0, pixelY = 0] = pixelXY;\n  const [W = 10, H = 10] = diagonal;\n  const [ox = 0, oy = 0] = originXY;\n\n  // 像素坐标换算为元坐标\n  const uX = (pixelX - ox) / (unitDiff * W);\n  const uY = (pixelY - oy) / (unitDiff * H);\n\n  // 45度变换\n  const unitX = _half_precision((uX + uY) / sincos45 / 2);\n  const unitY = _half_precision(uY / sincos45 - unitX);\n\n  return [unitX, unitY];\n}\n\n/* 根据行列数设定，取得错列布局元坐标集合\n* @param {Number}   column       列数\n* @param {Number}   row          行数\n* @param {Function} filter       过滤\n* @param {Function} processor    加工：可以用于将单位为1的坐标值换算为目标值或对象\n* @return {Array} 生成的坐标集合\n*/\nexport function getStaggeredUnitsByRowCol (column = 1, row = 1, processor = (x, y)=>[x, y], filter = (x, y)=>true) {\n  const ret = [];\n  // const xIsSingle = column === 1;\n  // const yIsSingle = row === 1;\n  const minCol = -Math.floor(column / 2);\n  const maxCol = column + minCol - 1;\n  const minRow = -Math.floor(row / 2);\n  const maxRow = row + minRow - 1;\n  const size = [1, 1];\n  const pos = [0, 0];\n  for(let rowNum = minRow; rowNum <= maxRow; rowNum++) {\n    const pxY = rowNum * 0.5;\n    const isOdd = Math.abs(pxY % 1) === 0.5;\n    // 奇数行右移，实现错列对齐\n    const xDiff = isOdd ? 0.5 : 0;\n    for(let colNum = minCol; colNum <= maxCol; colNum++) {\n      const pxX = colNum + xDiff;\n      const [xId, yId] = rhombusPixel2unit([pxX, pxY], size, pos);\n      // -del- 排除掉奇数末个，实现整齐效果 -del- ，不再干预、自行 filter\n      // if (yIsSingle || xIsSingle || !isOdd || colNum !== maxCol) {\n        filter(xId, yId, colNum, rowNum, minCol, minRow, maxCol, maxRow, column, row) && ret.push(processor(xId, yId, colNum, rowNum, minCol, minRow, maxCol, maxRow, column, row));\n      // }\n    }\n  }\n  return ret;\n};\n/*\nexport function getStaggeredUnitsByRowCol (column = 1, row = 1, processor = (x, y)=>[x, y], filter = (x, y)=>true) {\n  const ret = [];\n  const xIsSingle = column === 1;\n  const halfX = Math.round(column / 2);\n  const halfY = Math.round(row / 2);\n  const size = [1, 1];\n  const pos = [0, 0];\n  for(let yNum = 1; yNum <= row; yNum++) {\n    const pxY = ((yNum - halfY) / 2);\n    const isOdd = yNum % 2 === 1;\n    // 奇数行右移，实现错列对齐\n    const xDiff = isOdd ? 0.5 : 0;\n    for(let xNum = 0; xNum < column; xNum++) {\n      const pxX = xNum + xDiff - halfX;\n      let [xId, yId] = rhombusPixel2unit([pxX, pxY], size, pos);\n      xId = Math.round(xId);\n      yId = Math.round(yId);\n      // 排除掉奇数第一个，实现整齐效果\n      if(xIsSingle || isOdd || xNum !== 0) {filter(xId, yId, xNum, yNum, column, row) && ret.push(processor(xId, yId, xNum, yNum, column, row));}\n    }\n  }\n  return ret;\n};*/\n\n/* 将任意像素坐标按错列布局中单元格尺寸取整，对应到相应像素坐标\n* @param {Array}    pos       像素坐标 x y 值\n* @param {Array}    size      单元格宽高 w h 值\n* @param {Array}    offsetPos 要累加到结果 x y 值上的偏移量\n* @return {Array} 生成的坐标集合\n*/\nexport function staggeredUnitRound ([vX = 0, vY = 0] = [], [w = 78, h = 40] = [], [oX = 0, oY = 0] = []) {\n  const halfW = w / 2;\n  const halfH = h / 2;\n  const y = Math.round(vY / halfH) * halfH;\n  let x = Math.round(vX / w) * w;\n\n  // 偶数行错列布局右移部分回填\n  if(y % h === halfH) {\n    // 鼠标位置大于半个则回移，小于半个则右移；保证在单元格内\n    x += (vX - x) >= 0 ? halfW : -halfW;\n  }\n  return [x + oX, y + oY];\n}\n","// 上下左右8个方位邻居单元的坐标差值及评分权重\nexport default [\n  [1, 0, 10],\n  [0, 1, 10],\n  [0, -1, 10],\n  [-1, 0, 10],\n  [-1, -1, 14],\n  [-1, 1, 14],\n  [1, -1, 14],\n  [1, 1, 14]\n];\n","/* 在 N*N 的坐标系集合中以1为单位进行A*寻径\n* @param {Array}   startUnitXY  X、Y元坐标值\n* @param {Array}   endUnitXY  X、Y元坐标值\n* @param {Function}  filter     自行过滤\n*  比如已知当前坐标，可以根据坐标对应的精灵属性判断是否可穿越：\n*  filter(x:当前位置X, y:当前位置Y, cost:位移成本(平移则为10、对角则为14), parentX:从哪个坐标过来的, parentY::从哪个坐标过来的)\n* @return {Array} 匹配的路径集合或空数组\n*/\n// 上右下左8个方向相邻单元的差值及评分权重 - 方向优先级以列表次序为准（这里后续可以适度扩展动态优先级次序）\nimport referenceArr from './tile-neighbors';\n\nexport default function (startUnitXY = [], endUnitXY = [], filter = (xId, yId, cost, refX, refY)=>true) {\n  // console.log(fromX + ',' + fromY, 'to', toX + ',' + toY);\n  const [fromX = 0, fromY = 0] = startUnitXY;\n  const [toX = 0, toY = 0] = endUnitXY;\n\n  // 起止点相同直接返回当前点\n  if(fromX === toX && fromY === toY) {\n    return [startUnitXY];\n  }\n  // 排除不可能到达的点，避免死循环\n  if(Math.abs(fromX % 1) !== Math.abs(toX % 1) || Math.abs(fromY % 1) !== Math.abs(toY % 1)) {\n    return [];\n  }\n  const cost = {};\n  const parentsPoints = {};\n\n  cost[startUnitXY.join()] = 0;\n\n  // const _limit = 0;\n  function checker (x, y) {\n    const eligiblePoints = [];\n    const currentCost = cost[x + ',' + y];\n    for(let refI = 0; refI < 8; refI++) {\n      const ref = referenceArr[refI];\n      const nextX = x + ref[0];\n      const nextY = y + ref[1];\n      const refCost = ref[2];\n      const nextKey = nextX + ',' + nextY;\n      const nextCost = cost[nextKey];\n      if(filter(nextX, nextY, refCost, x, y) && (nextCost === undefined || currentCost + refCost < nextCost)) {\n        cost[nextKey] = currentCost + refCost;\n        parentsPoints[nextKey] = [x, y];\n        eligiblePoints.push([nextX, nextY]);\n        if(nextX === toX && nextY === toY) {\n          break;\n        }\n      }\n    }\n    return eligiblePoints;\n  };\n\n  const openlist = [ startUnitXY ];\n  const path = [];\n  while(openlist.length) {\n    const curPoint = openlist.pop();\n    const eligiblePoints = checker(curPoint[0], curPoint[1]);\n    const epLen = eligiblePoints.length;\n    for(let i = 0; i < epLen; i++) {\n      const extPoint = eligiblePoints[i];\n      // 到达终点生成路径\n      if(extPoint[0] === toX && extPoint[1] === toY) {\n        path.push(endUnitXY);\n        let pathPoint = endUnitXY;\n        // 回查到完整路径\n        while(pathPoint[0] !== fromX || pathPoint[1] !== fromY) {\n          pathPoint = parentsPoints[pathPoint.join()];\n          path.unshift(pathPoint);\n        }\n        // console.log(JSON.stringify(path));\n        return path;\n      }\n      openlist.unshift(extPoint);\n    }\n  }\n  return path;\n};\n","/**  这里的坐标都是以1位单位，按四象限原点为(0, 0)为基准的   **/\n/**  错列或偶数个元素基于原点排列  **/\n\n// 公布tiled基本工具方法\nexport * from './utils';\n\n// export * from './ellipse';\n// export * from './polygon';\n\nimport astar from './astar';\n// 公布A*寻路\nexport const searchPath = astar;\n\n"],"names":["arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getUnitsByRowCol","column","row","processor","xId","yId","filter","ret","halfCol","Math","round","halfRow","x","y","push","getNeighbourUnitsByRowCol","getDiagonalUnitsByRowCol","abs","getUnitsByDiagonal","startUnitXY","endUnitXY","startX","startY","endX","endY","minX","min","maxX","max","minY","maxY","oneArc","PI","rotateUnit","unitXY","angle","arc","sinv","sin","cosv","cos","unit2pixel","size","originXY","map","XY","i","_half_precision","v","pixel2unit","pixelXY","sqrt2","sqrt","sincos45","unitDiff","unit2rhombusPixel","diagonal","X","Y","W","H","ox","oy","pixelX","pixelY","rhombusPixel2unit","uX","uY","unitX","unitY","getStaggeredUnitsByRowCol","minCol","floor","maxCol","minRow","maxRow","pos","rowNum","pxY","isOdd","xDiff","colNum","pxX","staggeredUnitRound","vX","vY","w","h","oX","oY","halfW","halfH","cost","refX","refY","fromX","fromY","toX","toY","parentsPoints","join","checker","eligiblePoints","currentCost","refI","ref","referenceArr","nextX","nextY","refCost","nextKey","nextCost","undefined","openlist","path","length","curPoint","pop","epLen","extPoint","pathPoint","unshift","searchPath","astar"],"mappings":"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"}