{"version":3,"file":"qtiled.dev.js","sources":["../../../src/shapes/ellipse.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../src/shapes/polygon.js","../../../src/shapes/rect.js","../../../src/shapes/hexagon.js","../../../src/shapes/rhombus.js","../../../src/shapes/index.js","../../../src/utils.js","../../../src/tile-neighbors.js","../../../src/astar.js","../../../src/index.js"],"sourcesContent":["/* 椭圆形 */\n\nexport const PI = Math.PI; // π；180度对应的弧度值\nexport const PI_DBL = PI * 2; // 2 倍的 π；360度对应的弧度值\nexport const PI_HALF = PI / 2; // 一半的 π；90度对应的弧度值\nexport const PI_OPF = PI + PI_HALF; // 1.5 倍的π One point five；270度对应弧度值\nexport const PI_OA = PI / 180; // One Angle 1角度换算为弧度值\n\n/* 角度转弧度\n* @param {Number}  angle    角度值 0 ~ 360+N\n* @return {Number} 弧度值\n*/\nexport function angle2Radian(angle = 0) {\n  return angle * PI_OA;\n}\n\n/* 弧度转角度\n* @param {Number}  radian    弧度值 0 ~ PI*N\n* @return {Number} 角度值\n*/\nexport function radian2Angle(radian = 0) {\n  return radian / PI_OA;\n}\n\n/* 根据椭圆的原点、X轴半径、Y轴半径、弧度，求得圆周上的点坐标\n* @param  {Number}  x0        圆心X点坐标值\n* @param  {Number}  y0        圆心Y点坐标值\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  radian    弧度值\n* @return {Array}   [x, y]\n*/\nexport function getEllipsePoint(x0, y0, radiusX, radiusY, radian) {\n  radian %= PI_DBL;\n  if(radian < 0) radian += PI_DBL;\n  const k = Math.tan(radian);\n  if(Math.abs(k) > 1e5) {\n    return [x0, y0 + (radian < PI ? radiusY : -radiusY)];\n  }\n  // 第一或第四象限取正、其他象限取负\n  const d = radian <= PI_HALF || radian > PI_OPF ? 1 : -1;\n  const v = 1 / radiusX ** 2 + k ** 2 / radiusY ** 2;\n  const x = d * Math.sqrt(1 / v) + x0;\n  return [x, k * x + y0 - k * x0];\n};\n\n/* 根据椭圆的原点、X轴半径、Y轴半径、角度，求得圆周上的点坐标\n* @param  {Number}  x0        圆心X点坐标值\n* @param  {Number}  y0        圆心Y点坐标值\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  angle     角度值\n* @return {Array}   [x, y]\n*/\nexport function getEllipsePointByAngle(x0, y0, radiusX, radiusY, angle) {\n  return getEllipsePoint(x0, y0, radiusX, radiusY, angle2Radian(angle));\n}\n\n/* 根据椭圆的X轴半径、Y轴半径、圆周等分数量、等分点序号、起始弧度，求得圆周上的点坐标\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  count     圆周等分数量\n* @param  {Number}  num       圆周等分点序号\n* @param  {Number}  radian    起始弧度\n* @return {Array}   [x, y]\n*/\nexport function getEllipseIsometryPoint(radiusX, radiusY, count, num, radian = 0) {\n  radian += PI_DBL * num / count;\n  return [radiusX * Math.cos(radian), radiusY * Math.sin(radian)];\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","/* 二维多边形相关配置及基础方法 */\n\n/* 基础配置参数（个别参数调整涉及算法变化，所以放全局配置，以示特殊）*/\nexport const HALF = 0.5;\nexport const FLAH = -HALF;\nexport const QUAR = 0.25; // 四分之一\nexport const RAUQ = -QUAR;\nexport const TQUA = 1 - QUAR; // 正六边形两行重合部分高度\n\n/* 得到一个多边形折线顶点坐标集合\n * @param  {Array}     baseVertexes    多边形顶点配置，如上文的: rectVertexes\n * @param  {Number}    width         渲染时的宽度值\n * @param  {Number}    height        渲染时的高度值\n * @param  {String}    axis          主轴方向 'x' || 'y'；默认为 'y'，上下是尖\n * @return {Array}     [x, y]\n */\nexport function getPolygonVertexes(baseVertexes, width = 1, height = 1, axis = 'y') {\n  let fun = ([x, y]) => [x * width, y * height];\n  // 如果是要将多边形图案横过来的，旋转90度（六边形会比较大的不同）\n  if (axis === 'x') {\n    fun = ([x, y]) => [y * width, x * height];\n  }\n  return baseVertexes.map(fun);\n};\n\nfunction _for(min, max, cbk) {\n  for (let i = min; i <= max; i++) cbk(i);\n}\nfunction for_(min, max, cbk) {\n  for (let i = max; i >= min; i--) cbk(i);\n}\nconst forEachConfs = {\n  RightDown(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    _for(minX, maxX, (x) => _for(minY, maxY, (y) => cbk(x, y)));\n  },\n  RightUp(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    _for(minX, maxX, (x) => for_(minY, maxY, (y) => cbk(x, y)));\n  },\n  LeftDown(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    for_(minX, maxX, (x) => _for(minY, maxY, (y) => cbk(x, y)));\n  },\n  LeftUp(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    for_(minX, maxX, (x) => for_(minY, maxY, (y) => cbk(x, y)));\n  }\n};\n\n/* 按renderOrder循环遍历主副轴二维数组\n * @param  {Array}     mainAxisRange  主轴总行数\n * @param  {Array}     subAxisRange   副轴总行数\n * @param  {String}    renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @param  {Function}  iterator    迭代函数，如：(x, y) => [x, y]\n * @return {Array}    [x, y]\n */\nexport function twoDimForEach(mainAxisRange = [0, 0], subAxisRange = [0, 0], renderOrder = 'RightDown', iterator = (x, y) => [x, y]) {\n  const forEachFun = forEachConfs[renderOrder] || forEachConfs.RightDown;\n  const retArr = [];\n  forEachFun(\n    ...mainAxisRange,\n    ...subAxisRange,\n    (x, y) => retArr.push(iterator(x, y))\n  );\n  return retArr;\n}\n\n/* 得到一组错列布局正多边形地图Tile的坐标偏移位置集合\n * @param  {Number}  offsetRate     偏移量比率\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y, xNum, yNum], ...]\n */\nexport function getPolygonPositions(offsetRate = 1, mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], stagger = 'odd', renderOrder = 'RightDown') {\n  const [width, _height] = tileSize;\n  // 多边形在主轴方向必须向上位移，才能保证挫列后网格对齐，所以这里要乘以 offsetRate\n  const height = _height * offsetRate;\n  const needOffset = stagger !== 'none';\n  const isOddNum = Number(stagger === 'odd');\n  // 多边形错列布局副轴上需要偏移来达成错列布局\n  return twoDimForEach(mainAxisRange, subAxisRange, renderOrder, (mainAxisNum, subAxisNum) => {\n    let offsetRate = mainAxisNum;\n    if (needOffset && Math.abs(Math.round(subAxisNum) % 2) === isOddNum) {\n      offsetRate += HALF; // 补充错列偏移量\n    }\n    return [\n      offsetRate * width,\n      subAxisNum * height,\n      mainAxisNum,\n      subAxisNum\n    ];\n  });\n}\n\n/* 通过大致的像素坐标值获取该位置tile元素的[Num, yNum]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getPolygonInfoByPos(offsetRate = 1, pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  const [originX, originY] = originPos;\n  const [width, height] = tileSize;\n  const rateHeight = height * offsetRate;\n\n  const posTop = pos[1] - originY;\n  const yNum = Math.round(posTop / rateHeight);\n\n  let posLeft = pos[0] - originX;\n\n  // 多边形错列布局需要补充偏移量\n  let xOffset = 0;\n  if (stagger !== 'none' && Math.abs(yNum % 2) === Number(stagger === 'odd')) {\n    xOffset = width * HALF;\n    posLeft -= xOffset;\n  }\n\n  const xNum = Math.round(posLeft / width);\n\n  return {\n    xNum,\n    yNum,\n    x: xNum * width + originX + xOffset,\n    y: yNum * rateHeight + originY,\n  };\n}\n","/* 正矩形地图元件方法 */\n\nimport { HALF, FLAH, getPolygonVertexes, getPolygonPositions, getPolygonInfoByPos } from './polygon';\n\n// 宽高为1的正矩形顶点集合\nconst rectVertexes = [\n  [FLAH, FLAH],\n  [HALF, FLAH],\n  [HALF, HALF],\n  [FLAH, HALF],\n];\n\n/* 根据计划渲染后的正矩形宽高值，得到顶点坐标集合\n* @param  {Number}  width    宽度\n* @param  {Number}  height   高度\n* @return {Array}   [[x, y], ...]\n*/\nexport function getRectVertexes(width = 1, height = 1) {\n  return getPolygonVertexes(rectVertexes, width, height);\n};\n\n/* 得到一组矩形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y], ...]\n */\nexport function getRectPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown') {\n  return getPolygonPositions(1, mainAxisRange, subAxisRange, tileSize, 'none', renderOrder);\n}\n\n/* 获得与pos坐标有交集的tile元素的{xNum, yNum, x, y}\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getRectInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4]) {\n  return getPolygonInfoByPos(1, pos, originPos, tileSize, 'none');\n}\n","/* 正六边形地图元件方法 */\n\nimport { HALF, FLAH, QUAR, RAUQ, TQUA, getPolygonVertexes, getPolygonPositions, getPolygonInfoByPos } from './polygon';\n\n// 宽高为1的六边形顶点集合（上下为尖）\nconst hexagonVertexes = [\n  [0, FLAH],\n  [HALF, RAUQ],\n  [HALF, QUAR],\n  [0, HALF],\n  [FLAH, QUAR],\n  [FLAH, RAUQ],\n];\n\n/* 根据计划渲染的六边形宽高值得到顶点坐标集\n* @param  {Number}  width    宽度\n* @param  {Number}  height   高度\n* @param  {String}  axis     主轴方向 'x' || 'y'；默认为 'y'，上下是尖\n* @return {Array}   [[x, y], ...]\n*/\nexport function getHexagonVertexes(width = 1, height = 1, axis = 'y') {\n  return getPolygonVertexes(hexagonVertexes, width, height, axis);\n};\n\n/* 得到一组错列布局六边形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}   [[x, y], ...]\n */\nexport function getHexagonPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown', stagger = 'odd') {\n  return getPolygonPositions(TQUA, mainAxisRange, subAxisRange, tileSize, stagger, renderOrder);\n}\n\n/* 通过大致的像素坐标值获取该位置tile元素的[Num, yNum]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getHexagonInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  return getPolygonInfoByPos(TQUA, pos, originPos, tileSize, stagger);\n}\n","/* 正菱形地图元件方法 */\n\nimport { HALF, FLAH, getPolygonVertexes, getPolygonPositions, getPolygonInfoByPos, twoDimForEach } from './polygon';\n\n// 宽高为1的正菱形顶点集合\nconst rhombusVertexes = [\n  [0, FLAH],\n  [HALF, 0],\n  [0, HALF],\n  [FLAH, 0],\n];\n\n/* 根据计划渲染的菱形宽高值，得到顶点坐标集合\n* @param  {Number}  width    宽度\n* @param  {Number}  height   高度\n* @return {Array}   [[x, y], ...]\n*/\nexport function getRhombusVertexes(width = 1, height = 1) {\n  return getPolygonVertexes(rhombusVertexes, width, height);\n};\n\n/* 得到一组错列布局菱形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y], ...]\n */\nexport function getRhombusPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown', stagger = 'odd') {\n  return getPolygonPositions(HALF, mainAxisRange, subAxisRange, tileSize, stagger, renderOrder);\n}\n\n/* 得到一组等距正菱形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y]...]\n */\nexport function getIsometricRhombusPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown') {\n  const halfWidth = tileSize[0] / 2;\n  const halfHeight = tileSize[1] / 2;\n  return twoDimForEach(mainAxisRange, subAxisRange, renderOrder, (mainAxisNum, subAxisNum) => [\n    (mainAxisNum + subAxisNum) * halfWidth,\n    (subAxisNum - mainAxisNum) * halfHeight,\n    mainAxisNum,\n    subAxisNum,\n  ]);\n}\n\n/* 通过大致的像素坐标值获取该位置tile元素的[Num, yNum]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getRhombusInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  return getPolygonInfoByPos(HALF, pos, originPos, tileSize, stagger);\n}\n","import * as ellipseFuns from './ellipse';\nexport const ellipse = ellipseFuns;\n\nimport * as rectFuns from './rect';\nexport const rect = rectFuns;\n\nimport * as hexagonFuns from './hexagon';\nexport const hexagon = hexagonFuns;\n\nimport * as rhombusFuns from './rhombus';\nexport const rhombus = rhombusFuns;\n","/* 根据行列数设定，取得对应元坐标集合\n* @param {Number}   column       列数\n* @param {Number}   row          行数\n* @param {Function} processor    加工：可以用于将单位为1的坐标值换算为目标值或对象\n* @param {Function} filter       过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const ret = [];\n  const halfCol = Math.round(column / 2);\n  const halfRow = Math.round(row / 2);\n  for(let x = 1; x <= column; x++) {\n    const xId = x - halfCol;\n    for(let y = 1; y <= row; y++) {\n      const yId = y - halfRow;\n      filter(xId, yId, x, y, column, row) && ret.push(processor(xId, yId, x, y, column, row));\n    }\n  }\n  return ret;\n};\n\n/* 根据行列数设定，取得与其最近的邻居元坐标集合\n* @param {Number}   column    列数\n* @param {Number}   row       行数\n* @param {Function} filter    过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getNeighbourUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  return getUnitsByRowCol(\n    column + 2,\n    row + 2,\n    processor,\n    (xId, yId, x, y, column, row)=>filter(xId, yId, x, y, column, row) && (x === 1 || x === column || y === 1 || y === row)\n  );\n};\n\n/* 根据斜对角元素数设定，取得斜对角范围内的错列元坐标集合（可用于将正规布局裁切掉四个角，生成菱形布局）\n* @param {Number}   column    列数\n* @param {Number}   row       行数\n* @param {Function} filter    过滤\n* @return {Array} 生成的坐标集合\n*/\nexport function getDiagonalUnitsByRowCol (column = 1, row = 1, processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const halfCol = Math.round(column / 2) - column % 2;\n  const halfRow = Math.round(row / 2) - row % 2;\n  return getUnitsByRowCol(\n    column,\n    row,\n    processor,\n    (xId, yId, x, y, column, row)=>filter(xId, yId, x, y, column, row) && Math.abs(xId) / halfCol + Math.abs(yId) / halfRow <= 1\n  );\n}\n\n/* 根据设定的起始点与结束点，取得这两点作为对角线对应矩形范围内的元坐标集合\n* @param {Array}   startUnitXY  X、Y元坐标值\n* @param {Array}   endUnitXY    X、Y元坐标值\n* @return {Array}  元坐标集合\n*/\nexport function getUnitsByDiagonal (startUnitXY = [], endUnitXY = [], processor = (xId, yId)=>[xId, yId], filter = ()=>true) {\n  const [startX = 0, startY = 0] = startUnitXY;\n  const [endX = 0, endY = 0] = endUnitXY;\n  const minX = Math.min(startX, endX);\n  const maxX = Math.max(startX, endX);\n  const minY = Math.min(startY, endY);\n  const maxY = Math.max(startY, endY);\n  const ret = [];\n  for(let xId = minX; xId <= maxX; xId++) {\n    for(let yId = minY; yId <= maxY; yId++) {\n      filter(xId, yId, minX, minY, maxX, maxY, startUnitXY, endUnitXY) && ret.push(processor(xId, yId, minX, minY, maxX, maxY, startUnitXY, endUnitXY));\n    }\n  }\n  return ret;\n}\n\n/* 根据设定角度，将指定的坐标绕原点旋转，并返回旋转后的坐标值\n* @param {Array}   unitXY   X、Y元坐标值\n* @param {Number}  angle    要旋转的角度值\n* @return {Array}  旋转后的坐标值\n*/\nconst oneArc = Math.PI / 180;\nexport function rotateUnit (unitXY = [], angle = 0) {\n  const [x = 0, y = 0] = unitXY;\n\n  // 角度转弧度\n const arc = angle * oneArc;\n  // 弧度转正余弦(考虑浮点溢出精度问题，这里 *10 计算后使用 Math.round 取整回去)\n  const sinv = Math.sin(arc) * 10;\n  const cosv = Math.cos(arc) * 10;\n\n  // 计算得到新坐标点\n  return [Math.round(x * cosv - y * sinv) / 10, Math.round(x * sinv + y * cosv) / 10];\n}\n\n/* 根据元坐标、渲染宽高、原点像素坐标，取得矩形元素渲染时的像素坐标\n* @param {Array}   unitXY   X、Y元坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的像素值\n*/\nexport function unit2pixel (unitXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return unitXY.map((XY, i)=>_half_precision(XY * size[i] + originXY[i]));\n}\n// 精确到0.5个单位\nexport function _half_precision (v) {\n  return Math.round(v * 2) / 2;\n}\n/* 根据像素坐标、渲染宽高、原点像素坐标，取得元坐标\n* @param {Array}   pixelXY   X、Y像素坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的元坐标\n*/\nexport function pixel2unit (pixelXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return pixelXY.map((XY, i)=> _half_precision((XY - originXY[i]) / size[i]));\n}\n\n/* 将像素坐标按照tile宽高取整\n* @param {Array}   pixelXY  X、Y像素坐标值\n* @param {Array}   size     width, height 元素宽高值\n* @param {Array}   originXY 基准像素点的X、Y像素坐标值\n* @return {Array} x,y 对应的元坐标\n*/\n/* export function pixelRound (pixelXY = [0, 0], size = [10, 10], originXY = [0, 0]) {\n  return pixelXY.map((XY, i)=> _half_precision( (XY-originXY[i])/size[i] ) );\n}\n*/\n/* 根据元坐标、菱形X-Y两个方向对角线长度、原点像素坐标，取得正菱形元素渲染时的像素坐标\n* @param {Array}   unitXY    X、Y 元坐标值\n* @param {Array}   diagonal  x, y 轴对应对角线长度值\n* @param {Array}   originXY  基准像素点的X、Y像素坐标值\n* @return {Array}  x,y 对应的像素值\n*/\nconst sqrt2 = Math.sqrt(2);\n// 45度的正余弦值\nconst sincos45 = sqrt2 / 2;\n// 元坐标45度变换后的差值补充\nconst unitDiff = -1 / sqrt2;\nexport function unit2rhombusPixel (unitXY = [], diagonal = [], originXY = []) {\n  const [X = 0, Y = 0] = unitXY;\n  const [W = 10, H = 10] = diagonal;\n  const [ox = 0, oy = 0] = originXY;\n\n  // 45度变换\n  const x = (X - Y) * sincos45;\n  const y = (X + Y) * sincos45;\n\n  // 变换后的元坐标换算为像素坐标\n  const pixelX = _half_precision(x * unitDiff * W + ox);\n  const pixelY = _half_precision(y * unitDiff * H + oy);\n\n  return [pixelX, pixelY];\n}\n\n/* 根据像素坐标、菱形X-Y两个方向对角线长度、原点像素坐标，取得正菱形元坐标\n* @param {Array}   pixelXY    X、Y 像素坐标值\n* @param {Array}   diagonal  x, y 轴对应对角线长度值\n* @param {Array}   originXY  基准像素点的X、Y像素坐标值\n* @return {Array}  x,y 对应元坐标值\n*/\nexport function rhombusPixel2unit (pixelXY = [], diagonal = [], originXY = []) {\n  const [pixelX = 0, pixelY = 0] = pixelXY;\n  const [W = 10, H = 10] = diagonal;\n  const [ox = 0, oy = 0] = originXY;\n\n  // 像素坐标换算为元坐标\n  const uX = (pixelX - ox) / (unitDiff * W);\n  const uY = (pixelY - oy) / (unitDiff * H);\n\n  // 45度变换\n  const unitX = _half_precision((uX + uY) / sincos45 / 2);\n  const unitY = _half_precision(uY / sincos45 - unitX);\n\n  return [unitX, unitY];\n}\n\n/* 根据行列数设定，取得错列布局元坐标集合\n* @param {Number}   column       列数\n* @param {Number}   row          行数\n* @param {Function} filter       过滤\n* @param {Function} processor    加工：可以用于将单位为1的坐标值换算为目标值或对象\n* @return {Array} 生成的坐标集合\n*/\nexport function getStaggeredUnitsByRowCol (column = 1, row = 1, processor = (x, y)=>[x, y], filter = (x, y)=>true) {\n  const ret = [];\n  // const xIsSingle = column === 1;\n  // const yIsSingle = row === 1;\n  const minCol = -Math.floor(column / 2);\n  const maxCol = column + minCol - 1;\n  const minRow = -Math.floor(row / 2);\n  const maxRow = row + minRow - 1;\n  const size = [1, 1];\n  const pos = [0, 0];\n  for(let rowNum = minRow; rowNum <= maxRow; rowNum++) {\n    const pxY = rowNum * 0.5;\n    const isOdd = Math.abs(pxY % 1) === 0.5;\n    // 奇数行右移，实现错列对齐\n    const xDiff = isOdd ? 0.5 : 0;\n    for(let colNum = minCol; colNum <= maxCol; colNum++) {\n      const pxX = colNum + xDiff;\n      const [xId, yId] = rhombusPixel2unit([pxX, pxY], size, pos);\n      // -del- 排除掉奇数末个，实现整齐效果 -del- ，不再干预、自行 filter\n      // if (yIsSingle || xIsSingle || !isOdd || colNum !== maxCol) {\n        filter(xId, yId, colNum, rowNum, minCol, minRow, maxCol, maxRow, column, row) && ret.push(processor(xId, yId, colNum, rowNum, minCol, minRow, maxCol, maxRow, column, row));\n      // }\n    }\n  }\n  return ret;\n};\n/*\nexport function getStaggeredUnitsByRowCol (column = 1, row = 1, processor = (x, y)=>[x, y], filter = (x, y)=>true) {\n  const ret = [];\n  const xIsSingle = column === 1;\n  const halfX = Math.round(column / 2);\n  const halfY = Math.round(row / 2);\n  const size = [1, 1];\n  const pos = [0, 0];\n  for(let yNum = 1; yNum <= row; yNum++) {\n    const pxY = ((yNum - halfY) / 2);\n    const isOdd = yNum % 2 === 1;\n    // 奇数行右移，实现错列对齐\n    const xDiff = isOdd ? 0.5 : 0;\n    for(let xNum = 0; xNum < column; xNum++) {\n      const pxX = xNum + xDiff - halfX;\n      let [xId, yId] = rhombusPixel2unit([pxX, pxY], size, pos);\n      xId = Math.round(xId);\n      yId = Math.round(yId);\n      // 排除掉奇数第一个，实现整齐效果\n      if(xIsSingle || isOdd || xNum !== 0) {filter(xId, yId, xNum, yNum, column, row) && ret.push(processor(xId, yId, xNum, yNum, column, row));}\n    }\n  }\n  return ret;\n};*/\n\n/* 将任意像素坐标按错列布局中单元格尺寸取整，对应到相应像素坐标\n* @param {Array}    pos       像素坐标 x y 值\n* @param {Array}    size      单元格宽高 w h 值\n* @param {Array}    offsetPos 要累加到结果 x y 值上的偏移量\n* @return {Array} 生成的坐标集合\n*/\nexport function staggeredUnitRound ([vX = 0, vY = 0] = [], [w = 78, h = 40] = [], [oX = 0, oY = 0] = []) {\n  const halfW = w / 2;\n  const halfH = h / 2;\n  const y = Math.round(vY / halfH) * halfH;\n  let x = Math.round(vX / w) * w;\n\n  // 偶数行错列布局右移部分回填\n  if(y % h === halfH) {\n    // 鼠标位置大于半个则回移，小于半个则右移；保证在单元格内\n    x += (vX - x) >= 0 ? halfW : -halfW;\n  }\n  return [x + oX, y + oY];\n}\n","// 上下左右8个方位邻居单元的坐标差值及评分权重\nexport default [\n  [1, 0, 10],\n  [0, 1, 10],\n  [0, -1, 10],\n  [-1, 0, 10],\n  [-1, -1, 14],\n  [-1, 1, 14],\n  [1, -1, 14],\n  [1, 1, 14]\n];\n","/* 在 N*N 的坐标系集合中以1为单位进行A*寻径\n* @param {Array}   startUnitXY  X、Y元坐标值\n* @param {Array}   endUnitXY  X、Y元坐标值\n* @param {Function}  filter     自行过滤\n*  比如已知当前坐标，可以根据坐标对应的精灵属性判断是否可穿越：\n*  filter(x:当前位置X, y:当前位置Y, cost:位移成本(平移则为10、对角则为14), parentX:从哪个坐标过来的, parentY::从哪个坐标过来的)\n* @return {Array} 匹配的路径集合或空数组\n*/\n// 上右下左8个方向相邻单元的差值及评分权重 - 方向优先级以列表次序为准（这里后续可以适度扩展动态优先级次序）\nimport referenceArr from './tile-neighbors';\n\nexport default function (startUnitXY = [], endUnitXY = [], filter = (xId, yId, cost, refX, refY)=>true) {\n  // console.log(fromX + ',' + fromY, 'to', toX + ',' + toY);\n  const [fromX = 0, fromY = 0] = startUnitXY;\n  const [toX = 0, toY = 0] = endUnitXY;\n\n  // 起止点相同直接返回当前点\n  if(fromX === toX && fromY === toY) {\n    return [startUnitXY];\n  }\n  // 排除不可能到达的点，避免死循环\n  if(Math.abs(fromX % 1) !== Math.abs(toX % 1) || Math.abs(fromY % 1) !== Math.abs(toY % 1)) {\n    return [];\n  }\n  const cost = {};\n  const parentsPoints = {};\n\n  cost[startUnitXY.join()] = 0;\n\n  // const _limit = 0;\n  function checker (x, y) {\n    const eligiblePoints = [];\n    const currentCost = cost[x + ',' + y];\n    for(let refI = 0; refI < 8; refI++) {\n      const ref = referenceArr[refI];\n      const nextX = x + ref[0];\n      const nextY = y + ref[1];\n      const refCost = ref[2];\n      const nextKey = nextX + ',' + nextY;\n      const nextCost = cost[nextKey];\n      if(filter(nextX, nextY, refCost, x, y) && (nextCost === undefined || currentCost + refCost < nextCost)) {\n        cost[nextKey] = currentCost + refCost;\n        parentsPoints[nextKey] = [x, y];\n        eligiblePoints.push([nextX, nextY]);\n        if(nextX === toX && nextY === toY) {\n          break;\n        }\n      }\n    }\n    return eligiblePoints;\n  };\n\n  const openlist = [ startUnitXY ];\n  const path = [];\n  while(openlist.length) {\n    const curPoint = openlist.pop();\n    const eligiblePoints = checker(curPoint[0], curPoint[1]);\n    const epLen = eligiblePoints.length;\n    for(let i = 0; i < epLen; i++) {\n      const extPoint = eligiblePoints[i];\n      // 到达终点生成路径\n      if(extPoint[0] === toX && extPoint[1] === toY) {\n        path.push(endUnitXY);\n        let pathPoint = endUnitXY;\n        // 回查到完整路径\n        while(pathPoint[0] !== fromX || pathPoint[1] !== fromY) {\n          pathPoint = parentsPoints[pathPoint.join()];\n          path.unshift(pathPoint);\n        }\n        // console.log(JSON.stringify(path));\n        return path;\n      }\n      openlist.unshift(extPoint);\n    }\n  }\n  return path;\n};\n","import * as shapesFuns from './shapes';\nexport const shapes = shapesFuns;\n\n/**  这里的坐标都是以1位单位，按四象限原点为(0, 0)为基准的   **/\n/**  错列或偶数个元素基于原点排列  **/\n\n// 公布tiled基本工具方法\nexport * from './utils';\n\n// export * from './ellipse';\n// export * from './polygon';\n\nimport astar from './astar';\n// 公布A*寻路\nexport const searchPath = astar;\n\n"],"names":["PI","Math","PI_DBL","PI_HALF","PI_OPF","PI_OA","angle2Radian","angle","radian2Angle","radian","getEllipsePoint","x0","y0","radiusX","radiusY","k","tan","abs","d","v","x","sqrt","getEllipsePointByAngle","getEllipseIsometryPoint","count","num","cos","sin","arrayLikeToArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayWithHoles","iterableToArrayLimit","nonIterableRest","HALF","FLAH","QUAR","RAUQ","TQUA","getPolygonVertexes","baseVertexes","width","height","axis","fun","y","map","_for","min","max","cbk","i","for_","forEachConfs","RightDown","minX","maxX","minY","maxY","RightUp","LeftDown","LeftUp","twoDimForEach","mainAxisRange","subAxisRange","renderOrder","iterator","forEachFun","retArr","push","getPolygonPositions","offsetRate","tileSize","stagger","_height","needOffset","isOddNum","Number","mainAxisNum","subAxisNum","round","getPolygonInfoByPos","pos","originPos","originX","originY","rateHeight","posTop","yNum","posLeft","xOffset","xNum","rectVertexes","getRectVertexes","getRectPositions","getRectInfoByPos","hexagonVertexes","getHexagonVertexes","getHexagonPositions","getHexagonInfoByPos","rhombusVertexes","getRhombusVertexes","getRhombusPositions","getIsometricRhombusPositions","halfWidth","halfHeight","getRhombusInfoByPos","ellipse","ellipseFuns","rect","rectFuns","hexagon","hexagonFuns","rhombus","rhombusFuns","getUnitsByRowCol","column","row","processor","xId","yId","filter","ret","halfCol","halfRow","getNeighbourUnitsByRowCol","getDiagonalUnitsByRowCol","getUnitsByDiagonal","startUnitXY","endUnitXY","startX","startY","endX","endY","oneArc","rotateUnit","unitXY","arc","sinv","cosv","unit2pixel","size","originXY","XY","_half_precision","pixel2unit","pixelXY","sqrt2","sincos45","unitDiff","unit2rhombusPixel","diagonal","X","Y","W","H","ox","oy","pixelX","pixelY","rhombusPixel2unit","uX","uY","unitX","unitY","getStaggeredUnitsByRowCol","minCol","floor","maxCol","minRow","maxRow","rowNum","pxY","isOdd","xDiff","colNum","pxX","staggeredUnitRound","vX","vY","w","h","oX","oY","halfW","halfH","cost","refX","refY","fromX","fromY","toX","toY","parentsPoints","join","checker","eligiblePoints","currentCost","refI","ref","referenceArr","nextX","nextY","refCost","nextKey","nextCost","undefined","openlist","path","length","curPoint","pop","epLen","extPoint","pathPoint","unshift","shapes","shapesFuns","searchPath","astar"],"mappings":"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"}