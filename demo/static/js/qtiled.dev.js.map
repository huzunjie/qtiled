{"version":3,"file":"qtiled.dev.js","sources":["../../../src/shapes/ellipse.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../src/shapes/polygon.js","../../../src/shapes/rect.js","../../../src/shapes/hexagon.js","../../../src/shapes/rhombus.js","../../../src/shapes/index.js","../../../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../src/path-finding/a-star.js","../../../src/path-finding/index.js","../../../src/index.js"],"sourcesContent":["/* 椭圆形 */\n\nexport const PI = Math.PI; // π；180度对应的弧度值\nexport const PI_DBL = PI * 2; // 2 倍的 π；360度对应的弧度值\nexport const PI_HALF = PI / 2; // 一半的 π；90度对应的弧度值\nexport const PI_OPF = PI + PI_HALF; // 1.5 倍的π One point five；270度对应弧度值\nexport const PI_OA = PI / 180; // One Angle 1角度换算为弧度值\n\n/* 角度转弧度\n* @param {Number}  angle    角度值 0 ~ 360+N\n* @return {Number} 弧度值\n*/\nexport function angle2Radian(angle = 0) {\n  return angle * PI_OA;\n}\n\n/* 弧度转角度\n* @param {Number}  radian    弧度值 0 ~ PI*N\n* @return {Number} 角度值\n*/\nexport function radian2Angle(radian = 0) {\n  return radian / PI_OA;\n}\n\n/* 根据椭圆的原点、X轴半径、Y轴半径、弧度，求得圆周上的点坐标\n* @param  {Number}  x0        圆心X点坐标值\n* @param  {Number}  y0        圆心Y点坐标值\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  radian    弧度值\n* @return {Array}   [x, y]\n*/\nexport function getPoint(x0, y0, radiusX, radiusY, radian) {\n  radian %= PI_DBL;\n  if(radian < 0) radian += PI_DBL;\n  const k = Math.tan(radian);\n  if(Math.abs(k) > 1e5) {\n    return [x0, y0 + (radian < PI ? radiusY : -radiusY)];\n  }\n  // 第一或第四象限取正、其他象限取负\n  const d = radian <= PI_HALF || radian > PI_OPF ? 1 : -1;\n  const v = 1 / radiusX ** 2 + k ** 2 / radiusY ** 2;\n  const x = d * Math.sqrt(1 / v) + x0;\n  return [x, k * x + y0 - k * x0];\n};\n\n/* 根据椭圆的原点、X轴半径、Y轴半径、角度，求得圆周上的点坐标\n* @param  {Number}  x0        圆心X点坐标值\n* @param  {Number}  y0        圆心Y点坐标值\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  angle     角度值\n* @return {Array}   [x, y]\n*/\nexport function getPointByAngle(x0, y0, radiusX, radiusY, angle) {\n  return getPoint(x0, y0, radiusX, radiusY, angle2Radian(angle));\n}\n\n/* 根据椭圆的X轴半径、Y轴半径、圆周等分数量、等分点序号、起始弧度，求得圆周上的点坐标\n* @param  {Number}  radiusX   X轴半径值\n* @param  {Number}  radiusY   Y轴半径值\n* @param  {Number}  count     圆周等分数量\n* @param  {Number}  num       圆周等分点序号\n* @param  {Number}  radian    起始弧度\n* @return {Array}   [x, y]\n*/\nexport function getIsometryPoint(radiusX, radiusY, count, num, radian = 0) {\n  radian += PI_DBL * num / count;\n  return [radiusX * Math.cos(radian), radiusY * Math.sin(radian)];\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","/* 二维多边形相关配置及基础方法 */\n\n/* 基础配置参数（个别参数调整涉及算法变化，所以放全局配置，以示特殊）*/\nexport const HALF = 0.5;\nexport const FLAH = -HALF;\nexport const QUAR = 0.25; // 四分之一\nexport const RAUQ = -QUAR;\nexport const TQUA = 1 - QUAR; // 正六边形两行重合部分高度\n\n/* 得到一个多边形折线顶点坐标集合\n * @param  {Array}     baseVertexes    多边形顶点配置，如上文的: rectVertexes\n * @param  {Number}    width         渲染时的宽度值\n * @param  {Number}    height        渲染时的高度值\n * @param  {String}    axis          主轴方向 'x' || 'y'；默认为 'y'，上下是尖\n * @return {Array}     [x, y]\n */\nexport function getVertexes(baseVertexes, width = 1, height = 1, axis = 'y') {\n  let fun = ([x, y]) => [x * width, y * height];\n  // 如果是要将多边形图案横过来的，旋转90度（六边形会比较大的不同）\n  if (axis === 'x') {\n    fun = ([x, y]) => [y * width, x * height];\n  }\n  return baseVertexes.map(fun);\n};\n\nfunction _for(min, max, cbk) {\n  for (let i = min; i <= max; i++) cbk(i);\n}\nfunction for_(min, max, cbk) {\n  for (let i = max; i >= min; i--) cbk(i);\n}\nconst forEachConfs = {\n  RightDown(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    _for(minX, maxX, (x) => _for(minY, maxY, (y) => cbk(x, y)));\n  },\n  RightUp(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    _for(minX, maxX, (x) => for_(minY, maxY, (y) => cbk(x, y)));\n  },\n  LeftDown(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    for_(minX, maxX, (x) => _for(minY, maxY, (y) => cbk(x, y)));\n  },\n  LeftUp(minX = 0, maxX = 0, minY = 0, maxY = 0, cbk) {\n    for_(minX, maxX, (x) => for_(minY, maxY, (y) => cbk(x, y)));\n  }\n};\n\n/* 按renderOrder循环遍历主副轴二维数组\n * @param  {Array}     mainAxisRange  主轴总行数\n * @param  {Array}     subAxisRange   副轴总行数\n * @param  {String}    renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @param  {Function}  iterator       迭代函数，如：(x, y) => [x, y]\n * @return {Array}    [x, y]\n */\nexport function twoDimForEach(mainAxisRange = [0, 0], subAxisRange = [0, 0], renderOrder = 'RightDown', iterator = (x, y) => [x, y]) {\n  const forEachFun = forEachConfs[renderOrder] || forEachConfs.RightDown;\n  const retArr = [];\n  forEachFun(\n    ...mainAxisRange,\n    ...subAxisRange,\n    (x, y) => {\n      const ret = iterator(x, y);\n      ret && retArr.push(ret);\n    }\n  );\n  return retArr;\n}\n\n// 某行是否需要按全局错列配置错位排列\nexport function isStaggerLine(lineNum, stagger) {\n  return stagger !== 'none' && Math.abs(Math.round(lineNum) % 2) === Number(stagger === 'odd');\n}\n\n/* 得到一个错列布局正多边形地图Tile的坐标值\n * @param  {Number}  lineRate       偏移量比率\n * @param  {Array}   xyNum          目标元素XY索引值，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {Array}   originXY       原点像素坐标值，如：[0, 0]\n * @return {Array}   [x, y, xNum, yNum]\n */\nexport function getPosition(lineRate = 1, xyNum = [0, 0], tileSize = [8, 4], stagger = 'none', originXY = [0, 0]) {\n  const [width, height] = tileSize;\n  const [xNum, yNum] = xyNum;\n  return [\n    // X轴按Y轴奇偶性补充错列偏移量\n    originXY[0] + (xNum + (isStaggerLine(yNum, stagger) ? HALF : 0)) * width,\n    // 多边形在主轴方向必须向上位移，才能保证挫列后网格对齐，所以这里要乘以 lineRate\n    originXY[1] + yNum * height * lineRate,\n    xNum,\n    yNum\n  ];\n}\n\n/* 得到一组错列布局正多边形地图Tile的坐标偏移位置集合\n * @param  {Number}  lineRate       主轴偏移量比率\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y, xNum, yNum], ...]\n */\nexport function getPositions(lineRate = 1, mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], stagger = 'odd', renderOrder = 'RightDown') {\n  const [width, _height] = tileSize;\n  // 多边形在主轴方向必须向上位移，才能保证挫列后网格对齐，所以这里要乘以 lineRate\n  const height = _height * lineRate;\n  const needOffset = stagger !== 'none';\n  const isOddNum = Number(stagger === 'odd');\n  // 多边形错列布局副轴上需要偏移来达成错列布局\n  return twoDimForEach(mainAxisRange, subAxisRange, renderOrder, (mainAxisNum, subAxisNum) => {\n    let lineRate = mainAxisNum;\n    if (needOffset && Math.abs(Math.round(subAxisNum) % 2) === isOddNum) {\n      lineRate += HALF; // 补充错列偏移量\n    }\n    return [\n      lineRate * width,\n      subAxisNum * height,\n      mainAxisNum,\n      subAxisNum\n    ];\n  });\n}\n\n/* 通过大致的像素坐标值获取该位置tile元素的[xNum, yNum, x, y]\n * @param  {Number}  lineRate       主轴偏移量比率（错列行之间的Y主轴坐标差值与其在主轴行高的比值）\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getInfoByPos(lineRate = 1, pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  const [originX, originY] = originPos;\n  const [width, height] = tileSize;\n  const lineHeight = height * lineRate; // 行高\n  const dotX = pos[0] - originX;\n  const dotY = pos[1] - originY;\n  // 多边形错列布局需要补充偏移量\n  let xNumOffset = 0;\n  const yNum = Math.round(dotY / lineHeight);\n  if (stagger !== 'none' && Math.abs(yNum % 2) === Number(stagger === 'odd')) {\n    xNumOffset = HALF;\n  }\n  const xNum = Math.round(dotX / width - xNumOffset);\n  const centerX = (xNum + xNumOffset) * width;\n  const centerY = yNum * lineHeight;\n  const tileX = centerX + originX;\n  const tileY = centerY + originY;\n  return [ xNum, yNum, tileX, tileY ];\n}\n","/* 正矩形地图元件方法 */\n\nimport {\n  HALF,\n  FLAH,\n  twoDimForEach,\n  getVertexes as getPolygonVertexes,\n  getPositions as getPolygonPositions,\n  getInfoByPos as getPolygonInfoByPos,\n} from './polygon';\n\n// 宽高为1的正矩形顶点集合\nexport const vertexes = [\n  [FLAH, FLAH],\n  [HALF, FLAH],\n  [HALF, HALF],\n  [FLAH, HALF],\n];\n\n/* 上、右、下、左，四个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本 */\nexport const directions = [\n  [0, -1, 1, '↑'],\n  [1, 0, 1, '→'],\n  [0, 1, 1, '↓'],\n  [-1, 0, 1, '←'],\n];\n\n/* 左上、右上、左下、右下，四个角邻居 [xNum, yNum, cost, angStr] 差值及距离成本 */\nexport const corners = [\n  [-1, -1, 1.414, '↖'],\n  [1, -1, 1.414, '↗'],\n  [1, 1, 1.414, '↘'],\n  [-1, 1, 1.414, '↙'],\n];\n\n/* 根据计划渲染后的正矩形宽高值，得到顶点坐标集合\n* @param  {Array}   size    如： [width{Number}, height{Number}]\n* @return {Array}   [[x, y], ...]\n*/\nexport function getVertexes([width, height] = [1, 1]) {\n  return getPolygonVertexes(vertexes, width, height);\n};\n\n/* 得到一个矩形地图瓦片的坐标偏移位置\n * @param  {Array}   xyNum          xy轴序号，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {Array}   originXY       原点像素坐标值，如：[80, 40]\n * @return {Array}   [x, y]\n */\nexport function getPosition(xyNum = [0, 0], tileSize = [8, 4], originXY = [0, 0]) {\n  return [originXY[0] + xyNum[0] * tileSize[0], originXY[1] + xyNum[1] * tileSize[1]];\n}\n\n/* 得到一组矩形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y], ...]\n */\nexport function getPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown') {\n  return getPolygonPositions(1, mainAxisRange, subAxisRange, tileSize, 'none', renderOrder);\n}\n\n/* 获得与pos坐标有交集的tile元素的{xNum, yNum, x, y}\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @return {Array}  [xNum, yNum, x, y]\n */\nexport function getInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4]) {\n  return getPolygonInfoByPos(1, pos, originPos, tileSize, 'none');\n}\n\n/* 获得指定tile下标周边的邻居元素们\n * @param  {Array}     originXyNum    XY轴序号，如：[0, 0]\n * @return {Array}  [[xNum, yNum]]\n */\nexport function getNeighbors(originXyNum = [0, 0], neisConf = [...directions, ...corners]) {\n  const [originXNum, originYNum] = originXyNum;\n  return neisConf.map(([xNum, yNum, cost, angStr]) => [xNum + originXNum, yNum + originYNum, cost, angStr]);\n}\n\n/* 按距离获得指定tile下标周边区域内的元素们\n * @param  {Array}     originXyNum     XY轴序号，如：[0, 0]\n * @param  {Number}    distance        下标间隔量，目标元素的第几圈邻居，0 ~ N\n * @param  {Function}  iterator        迭代函数，如：(x, y) => [x, y]\n * @param  {String}    renderOrder     渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}  [[xNum, yNum]]\n */\nexport function getNeighborsByDistance(originXyNum = [0, 0], distance = 1, iterator = (x, y) => [x, y], renderOrder) {\n  return twoDimForEach([-distance, distance], [-distance, distance], renderOrder, iterator);\n}\n","/* 正六边形地图元件方法 */\n\nimport {\n  HALF,\n  FLAH,\n  QUAR,\n  RAUQ,\n  TQUA as TQUA_VAL,\n  isStaggerLine,\n  getVertexes as getPolygonVertexes,\n  getPosition as getPolygonPosition,\n  getPositions as getPolygonPositions,\n  getInfoByPos as getPolygonInfoByPos,\n} from './polygon';\n\n// 宽高为1的六边形顶点集合（上下为尖）\nexport const vertexes = [\n  [0, FLAH],\n  [HALF, RAUQ],\n  [HALF, QUAR],\n  [0, HALF],\n  [FLAH, QUAR],\n  [FLAH, RAUQ],\n];\n\nexport const TQUA = TQUA_VAL;\n\n/* 左上、右上、右下、左下、左边、右边，6个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本及渲染角度 */\nexport const directionsNormal = [\n  [-1, -1, 1, '↖'],\n  [0, -1, 1, '↗'],\n  [0, 1, 1, '↘'],\n  [-1, 1, 1, '↙'],\n  [-1, 0, 1, '←'],\n  [1, 0, 1, '→'],\n];\n\n/* 错列行邻居下标差值 [xNum, yNum, cost, angStr] */\nexport const directionsOffset = [\n  [0, -1, 1, '↖'],\n  [1, -1, 1, '↗'],\n  [1, 1, 1, '↘'],\n  [0, 1, 1, '↙'],\n  [-1, 0, 1, '←'],\n  [1, 0, 1, '→'],\n];\n\n/* 根据计划渲染的六边形宽高值得到顶点坐标集\n* @param  {Array}   size    如： [width{Number}, height{Number}]\n* @param  {String}  axis     主轴方向 'x' || 'y'；默认为 'y'，上下是尖\n* @return {Array}   [[x, y], ...]\n*/\nexport function getVertexes([width = 1, height = 1] = [1, 1], axis = 'y') {\n  return getPolygonVertexes(vertexes, width, height, axis);\n};\n\n/* 得到一个错列布局六边形地图瓦片的坐标位置\n * @param  {Array}   xyNum          目标元素XY索引值，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错位排列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {Array}   originXY       原点像素坐标值，如：[0, 0]\n * @return {Array}   [x, y]\n */\nexport function getPosition(xyNum = [0, 0], tileSize = [8, 4], stagger = 'odd', originXY = [0, 0]) {\n  return getPolygonPosition(TQUA, xyNum, tileSize, stagger, originXY);\n}\n\n/* 得到一组错列布局六边形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}   [[x, y], ...]\n */\nexport function getPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown', stagger = 'odd') {\n  return getPolygonPositions(TQUA, mainAxisRange, subAxisRange, tileSize, stagger, renderOrder);\n}\n\n/* 通过大致的像素坐标值获取该位置tile元素的[Num, yNum]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}  [xNum, yNum, x, y]\n */\nexport function getInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  return getPolygonInfoByPos(TQUA, pos, originPos, tileSize, stagger);\n}\n\n/* 获得指定tile下标周边紧邻的邻居们\n * @param  {Array}     originXyNum     参考点元素下标，如：[0, 0]\n * @param  {String}    stagger         需要错位排列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}  [[xNum, yNum]]\n */\nexport function getNeighbors(originXyNum = [0, 0], stagger = 'odd') {\n  const [originXNum, originYNum] = originXyNum;\n  const directions = isStaggerLine(originYNum, stagger) ? directionsOffset : directionsNormal;\n  return directions.map(([xNum, yNum, cost, angStr]) => [xNum + originXNum, yNum + originYNum, cost, angStr]);\n}\n","/* 正菱形地图元件方法 */\n// 点(x, y)在宽w高h的菱形内：| x * h | + | y * w | < h * w * 0.5\n\nimport {\n  HALF,\n  FLAH,\n  twoDimForEach,\n  isStaggerLine,\n  getPosition as getPolygonPosition,\n  getVertexes as getPolygonVertexes,\n  getPositions as getPolygonPositions,\n  getInfoByPos as getPolygonInfoByPos,\n} from './polygon';\n\n// 宽高为1的正菱形顶点集合\nconst vertexes = [\n  [0, FLAH],\n  [HALF, 0],\n  [0, HALF],\n  [FLAH, 0],\n];\n\n// 非错列元素的上、右、下、左，四个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本\nexport const directionsNormal = [\n  [-1, -1, 1, '↖'],\n  [0, -1, 1, '↗'],\n  [0, 1, 1, '↘'],\n  [-1, 1, 1, '↙'],\n];\n\n// 错列元素的上、右、下、左，四个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本\nexport const directionsOffset = [\n  [0, -1, 1, '↖'],\n  [1, -1, 1, '↗'],\n  [1, 1, 1, '↘'],\n  [0, 1, 1, '↙'],\n];\n\n// 错列或非错列元素的左上、右上、左下、右下，四个角邻居 [xNum, yNum] 差值及距离成本\n// 没错，错列与非错列的角的邻居坐标系差值一样\nexport const cornersNormalOrOffset = [\n  [0, -2, 1.414, '↑'],\n  [1, 0, 1.414, '→'],\n  [0, 2, 1.414, '↓'],\n  [-1, 0, 1.414, '←'],\n];\n\n// 等距元素的上、右、下、左，四个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本\nexport const directionsIsometric = [\n  [0, -1, 1, '↖'],\n  [1, 0, 1, '↗'],\n  [0, 1, 1, '↘'],\n  [-1, 0, 1, '↙'],\n];\n\n// 等距元素的上、右、下、左，四个边邻居 [xNum, yNum, cost, angStr] 差值及距离成本\nexport const cornersIsometric = [\n  [1, -1, 1.414, '↑'],\n  [1, 1, 1.414, '→'],\n  [-1, 1, 1.414, '↓'],\n  [-1, -1, 1.414, '←'],\n];\n\n/* 获取宽高的一半（菱形中心点在顶点坐标系中的值）\n* @param  {Array}   size    如： [width{Number}, height{Number}]\n* @return {Array}   [halfWidth, halfHeight]\n*/\nexport function getHalfSize([width = 1, height = 1] = [1, 1]) {\n  return [width * HALF, height * HALF];\n}\n\n/* 根据计划渲染的菱形宽高值，得到顶点坐标集合\n* @param  {Array}   size    如： [width{Number}, height{Number}]\n* @return {Array}   [[x, y], ...]\n*/\nexport function getVertexes([width = 1, height = 1] = [1, 1]) {\n  return getPolygonVertexes(vertexes, width, height);\n};\n\n/* 得到一个错列布局菱形地图瓦片的坐标位置\n * @param  {Array}   xyNum          目标元素XY索引值，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错位排列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {Array}   originXY       原点像素坐标值，如：[0, 0]\n * @return {Array}   [x, y]\n */\nexport function getPosition(xyNum = [0, 0], tileSize = [8, 4], stagger = 'odd', originXY = [0, 0]) {\n  return getPolygonPosition(HALF, xyNum, tileSize, stagger, originXY);\n}\n\n/* 得到一组错列布局菱形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y], ...]\n */\nexport function getPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown', stagger = 'odd') {\n  return getPolygonPositions(HALF, mainAxisRange, subAxisRange, tileSize, stagger, renderOrder);\n}\n\n/* 按等距布局菱形单元横纵坐标值及单元格宽高得到渲染坐标值 */\nexport function getIsometricPosition([xNum, yNum] = [], tileSize = [8, 4], originXY = [0, 0]) {\n  const [x, y] = getIsometricPosByHalfSize(xNum, yNum, ...getHalfSize(tileSize));\n  return [x + originXY[0], y + originXY[1]];\n}\n\n/* 按等距布局菱形单元横纵坐标值及单元格宽高的一半得到渲染坐标值 */\nexport function getIsometricPosByHalfSize(xNum, yNum, halfWidth, halfHeight) {\n  return [(xNum + yNum) * halfWidth, (yNum - xNum) * halfHeight];\n}\n\n/* 得到一组等距正菱形地图瓦片的坐标偏移位置集合\n * @param  {Array}   mainAxisRange  主轴行序号区间，如：[0, 0]\n * @param  {Array}   subAxisRange   副轴行序号区间，如：[0, 0]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要挫列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @param  {String}  renderOrder    渲染方向：['RightDown','RightUp', 'LeftDown', 'LeftUp']；默认为 'RightDown'\n * @return {Array}   [[x, y]...]\n */\nexport function getIsometricPositions(mainAxisRange = [0, 0], subAxisRange = [0, 0], tileSize = [8, 4], renderOrder = 'RightDown') {\n  const [halfWidth, halfHeight] = getHalfSize(tileSize);\n  return twoDimForEach(mainAxisRange, subAxisRange, renderOrder, (xNum, yNum) => [\n    ...getIsometricPosByHalfSize(xNum, yNum, halfWidth, halfHeight),\n    xNum,\n    yNum,\n  ]);\n}\n\n/* 通过大致的像素坐标值获取该位置错列布局tile元素的[Num, yNum, x, y]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @param  {String}  stagger        需要错列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}  [xNum, yNum, x, y]\n */\nexport function getInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4], stagger = 'odd') {\n  return getPolygonInfoByPos(HALF, pos, originPos, tileSize, stagger);\n}\n\n/* 通过大致的像素坐标值获取该位置等距布局tile元素的[Num, yNum]\n * @param  {Array}   pos            目标点像素坐标值(相对于画布原点的偏移量)，如：[x<Number>, y<Number>]\n * @param  {Array}   originPos      地图起点元素渲染时像素坐标值，如：[x<Number>, y<Number>]\n * @param  {Array}   tileSize       单瓦片图宽高值，如：[80, 40]\n * @return {Object}  {xNum, yNum, x, y}\n */\nexport function getIsometricInfoByPos(pos = [0, 0], originPos = [0, 0], tileSize = [8, 4]) {\n  const [halfWidth, halfHeight] = getHalfSize(tileSize);\n  const [originX, originY] = originPos;\n  const xSteps = (pos[0] - originX) / halfWidth * HALF;\n  const ySteps = (pos[1] - originY) / halfHeight * HALF;\n  const yNum = Math.round(ySteps + xSteps);\n  const xNum = Math.round(xSteps - ySteps);\n  const [x, y] = getIsometricPosByHalfSize(xNum, yNum, halfWidth, halfHeight);\n  return [\n    xNum,\n    yNum,\n    x + originX,\n    y + originY,\n  ];\n}\n\n/* 获得错列布局中指定tile下标周边紧邻的邻居们\n * @param  {Array}     originXyNum     参考点元素下标，如：[0, 0]\n * @param  {String}    stagger         需要错位排列的行：['odd', 'even', 'none']；默认为 'odd' 奇数行错开（通常第一行是0行）\n * @return {Array}  [[xNum, yNum]]\n */\nexport function getNeighbors(originXyNum = [0, 0], stagger = 'odd') {\n  const [originXNum, originYNum] = originXyNum;\n  const neisArr = [\n    ...cornersNormalOrOffset,\n    ...(isStaggerLine(originYNum, stagger) ? directionsOffset : directionsNormal),\n  ];\n  return neisArr.map(([xNum, yNum, cost, angStr]) => [xNum + originXNum, yNum + originYNum, cost, angStr]);\n}\n\n/* 获得等距布局中指定tile下标周边紧邻的邻居们\n * @param  {Array}     originXyNum     参考点元素下标，如：[0, 0]\n * @return {Array}  [[xNum, yNum]]\n */\nexport function getIsometricNeighbors(originXyNum = [0, 0]) {\n  const [originXNum, originYNum] = originXyNum;\n  const neisArr = [ ...cornersIsometric, ...directionsIsometric ];\n  return neisArr.map(([xNum, yNum, cost, angStr]) => [xNum + originXNum, yNum + originYNum, cost, angStr]);\n}\n","import * as ellipseFuns from './ellipse';\nexport const ellipse = ellipseFuns;\n\nimport * as rectFuns from './rect';\nexport const rect = rectFuns;\n\nimport * as hexagonFuns from './hexagon';\nexport const hexagon = hexagonFuns;\n\nimport * as rhombusFuns from './rhombus';\nexport const rhombus = rhombusFuns;\n\nimport * as polygonFuns from './polygon';\nexport const polygon = polygonFuns;\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","/* A*寻径\n* @param {Array}                 staXyNum              数据坐标值，如：[xNum, yNum]\n* @param {Array}                 endXyNum              数据坐标值，如：[xNum, yNum]\n* @param {Function}              getNeighbors          需要外部传入获取邻居坐标的方法（等距、错列、正矩形方案不同）\n*                                                      参数示例：(currXyNum = [xNum, yNum])\n*                                                      需要返回邻居坐标值、权重的tile二维数组：[[xNum1, yNum1, cost1], [xNum2, yNum2, cost2], ...]\n* @param {Number}                maximizable           最大可循环次数（默认为1e6，用于防止死循环）\n* @return {Array} 匹配的路径集合或空数组\n*/\nexport default function aStar(\n  staXyNum = [0, 0],\n  endXyNum = [0, 0],\n  getNeighbors = (currPointXyNum) => [],\n  maximizable = 1e6,\n) {\n  const path = [];\n  const [staXNum, staYNum] = staXyNum;\n  const [endXNum, endYNum] = endXyNum;\n  const staPoint = [staXNum, staYNum, 0];\n  let n = 0;\n  // 起止点相同直接返回当前点\n  if(staXNum === endXNum && staYNum === endYNum) {\n    path.push(staPoint);\n  } else {\n    const parents = {};\n    const costs = { [xyNum2Str(staXyNum)]: 0 };\n    const openlist = [staPoint];\n    while(openlist.length) {\n      const currPoint = openlist.pop();\n      const currCost = costs[xyNum2Str(currPoint)];\n      // 从邻居中查找可以更低成本通过的节点\n      getNeighbors(currPoint).some(([xNum, yNum, cost]) => {\n        const neiXYStr = xyNum2Str([xNum, yNum]);\n        const oldCost = costs[neiXYStr];\n        const neiCost = Math.round((currCost + (cost || 1)) * 1e3) / 1e3;\n        // 当前点通行成本还不如已经确定的成本低，那么舍弃路径方案\n        if (oldCost !== undefined && neiCost >= oldCost) return;\n        costs[neiXYStr] = neiCost;\n        parents[neiXYStr] = currPoint;\n\n        // 循环次数达到上限，抛出异常终止查找\n        n++;\n        if (n > maximizable) throw new Error('[pathFinding.aStar] The number of loops exceeds the maximum value:' + maximizable);\n        const neiPoint = [xNum, yNum, neiCost];\n        // 到达终点生成路径\n        if(xNum === endXNum && yNum === endYNum) {\n          path.push(neiPoint);\n          // 回查链表得到完整路径数组\n          let prevXyNum = endXyNum;\n          while((prevXyNum = parents[xyNum2Str(prevXyNum)])) {\n            path.unshift(prevXyNum);\n          }\n          openlist.length = 0;\n          return false;\n        } else {\n          // 没到达终点，将当前点放入开放点列表，继续查找\n          openlist.unshift(neiPoint);\n        }\n      });\n    }\n  }\n  return path.length ? path : null;\n};\n\nfunction xyNum2Str([xNum, yNum]) {\n  return `${xNum}_${yNum}`;\n}\n","import aStarFun from './a-star';\nexport const aStar = aStarFun;\n\n","// 基础图形方法\nimport * as shapesObj from './shapes';\nexport const shapes = shapesObj;\n\n// 寻路方法\nimport * as pathFindingObj from './path-finding';\nexport const pathFinding = pathFindingObj;\n"],"names":["PI","Math","PI_DBL","PI_HALF","PI_OPF","PI_OA","angle2Radian","angle","radian2Angle","radian","getPoint","x0","y0","radiusX","radiusY","k","tan","abs","d","v","x","sqrt","getPointByAngle","getIsometryPoint","count","num","cos","sin","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","HALF","FLAH","QUAR","RAUQ","TQUA","getVertexes","baseVertexes","width","height","axis","fun","y","map","_for","min","max","cbk","i","for_","forEachConfs","RightDown","minX","maxX","minY","maxY","RightUp","LeftDown","LeftUp","twoDimForEach","mainAxisRange","subAxisRange","renderOrder","iterator","forEachFun","retArr","ret","push","isStaggerLine","lineNum","stagger","round","Number","getPosition","lineRate","xyNum","tileSize","originXY","xNum","yNum","getPositions","_height","needOffset","isOddNum","mainAxisNum","subAxisNum","getInfoByPos","pos","originPos","originX","originY","lineHeight","dotX","dotY","xNumOffset","centerX","centerY","tileX","tileY","vertexes","directions","corners","getPolygonVertexes","getPolygonPositions","getPolygonInfoByPos","getNeighbors","originXyNum","neisConf","originXNum","originYNum","cost","angStr","getNeighborsByDistance","distance","TQUA_VAL","directionsNormal","directionsOffset","getPolygonPosition","cornersNormalOrOffset","directionsIsometric","cornersIsometric","getHalfSize","getIsometricPosition","getIsometricPosByHalfSize","halfWidth","halfHeight","getIsometricPositions","getIsometricInfoByPos","xSteps","ySteps","neisArr","getIsometricNeighbors","ellipse","ellipseFuns","rect","rectFuns","hexagon","hexagonFuns","rhombus","rhombusFuns","polygon","polygonFuns","aStar","staXyNum","endXyNum","currPointXyNum","maximizable","path","staXNum","staYNum","endXNum","endYNum","staPoint","n","parents","costs","xyNum2Str","openlist","currPoint","pop","currCost","some","neiXYStr","oldCost","neiCost","undefined","Error","neiPoint","prevXyNum","unshift","length","aStarFun","shapes","shapesObj","pathFinding","pathFindingObj"],"mappings":"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"}