/**
 * QTiled v0.2.0
 * (c) 2021 huzunjie
 * Released under MIT
 */
!(function(n, t) {typeof exports === 'object' && typeof module !== 'undefined' ? t(exports) : typeof define === 'function' && define.amd ? define(['exports'], t) : t((n = typeof globalThis !== 'undefined' ? globalThis : n || self).qtiled = {});}(this, function(n) {'use strict';function m(n, t) {return (function(n) {if(Array.isArray(n))return n;}(n)) || (function(n, t) {let o = n == null ? null : typeof Symbol !== 'undefined' && n[Symbol.iterator] || n['@@iterator'];if(o != null) {let i; let r; const e = []; let u = !0; let v = !1;try{for(o = o.call(n);!(u = (i = o.next()).done) && (e.push(i.value), !t || e.length !== t);u = !0);}catch(n) {v = !0, r = n;}finally{try{u || o.return == null || o.return();}finally{if(v)throw r;}}return e;}}(n, t)) || o(n, t) || (function() {throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');}());}function e(n) {return (function(n) {if(Array.isArray(n))return i(n);}(n)) || (function(n) {if(typeof Symbol !== 'undefined' && n[Symbol.iterator] != null || n['@@iterator'] != null)return Array.from(n);}(n)) || o(n) || (function() {throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.');}());}function o(n, t) {if(n) {if(typeof n === 'string')return i(n, t);let o = Object.prototype.toString.call(n).slice(8, -1);return(o = o === 'Object' && n.constructor ? n.constructor.name : o) === 'Map' || o === 'Set' ? Array.from(n) : o === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o) ? i(n, t) : void 0;}}function i(n, t) {(t == null || t > n.length) && (t = n.length);for(var o = 0, i = new Array(t);o < t;o++)i[o] = n[o];return i;}function r() {for(var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t) {return[n, t];}, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function() {return!0;}, r = [], e = Math.round(n / 2), u = Math.round(t / 2), v = 1;v <= n;v++)for(let d = v - e, h = 1;h <= t;h++) {const l = h - u;i(d, l, v, h, n, t) && r.push(o(d, l, v, h, n, t));}return r;}const u = Math.PI / 180;function v(n) {return Math.round(2 * n) / 2;}var t = Math.sqrt(2); const d = t / 2; const h = -1 / t;function y() {var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : []; var i = m(n, 2); var r = i[0]; const e = void 0 === r ? 0 : r; var n = i[1]; var r = void 0 === n ? 0 : n; var i = m(t, 2); var n = i[0]; var t = void 0 === n ? 10 : n; var n = i[1]; var i = void 0 === n ? 10 : n; var n = m(o, 2); var o = n[0]; var n = n[1]; var i = (r - (void 0 === n ? 0 : n)) / (h * i); var t = v(((e - (void 0 === o ? 0 : o)) / (h * t) + i) / d / 2);return[t, v(i / d - t)];}const l = Math.PI; const a = 2 * l; const g = l / 2; const f = l + g; const c = l / 180;function s() {return(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0) * c;}function p(n, t, o, i, r) {(r %= a) < 0 && (r += a);const e = r <= g || f < r ? 1 : -1; var r = Math.tan(r); var i = 1 / Math.pow(o, 2) + Math.pow(r, 2) / Math.pow(i, 2); var i = e * Math.sqrt(1 / i) + n;return[i, r * i + t - r * n];}const b = 0.5; let M = -b; var t = 0.25; const P = [[M, M], [b, M], [b, b], [M, b]];const w = [[0, M], [b, 0], [0, b], [M, 0]];const R = [[0, M], [b, -0.25], [b, t], [0, b], [M, t], [M, -0.25]];function x(n, t, o, i) {const r = arguments.length > 1 && void 0 !== t ? t : 1; const e = arguments.length > 2 && void 0 !== o ? o : 1; var i = (arguments.length > 3 && void 0 !== i ? i : 'y') === 'x' ? function(n) {const t = m(n, 2); var n = t[0];return[t[1] * r, n * e];} : function(n) {var t = m(n, 2); var n = t[0]; var t = t[1];return[n * r, t * e];};return n.map(i);}function A(n, t, o) {for(let i = n;i <= t;i++)o(i);}const D = {RightDown() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0; const r = arguments.length > 4 ? arguments[4] : void 0;A(n, t, function(t) {return A(o, i, function(n) {return r(t, n);}), 0;});}, RightUp() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0; const r = arguments.length > 4 ? arguments[4] : void 0;A(n, t, function(t) {return A(-i, -o, function(n) {return r(t, n);}), 0;});}, LeftDown() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0; const r = arguments.length > 4 ? arguments[4] : void 0;A(-t, -n, function(t) {return A(o, i, function(n) {return r(t, n);}), 0;});}, LeftUp() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0; const r = arguments.length > 4 ? arguments[4] : void 0;A(-t, -n, function(t) {return A(-i, -o, function(n) {return r(t, n);}), 0;});}};function I() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 0]; var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'RightDown'; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function(n, t) {return[n, t];}; var o = D[o] || D.RightDown; const r = [];return o.apply(void 0, e(n).concat(e(t), [function(n, t) {return r.push(i(n, t));}])), r;}const U = {none(n) {return n;}, def(n, t, o, i) {return Math.round(t - i) % 2 === o ? n + b : n;}};function S(n, t, o, i, r, e) {var n = arguments.length > 0 && void 0 !== n ? n : 1; var t = arguments.length > 1 && void 0 !== t ? t : [0, 0]; var o = arguments.length > 2 && void 0 !== o ? o : [0, 0]; var i = arguments.length > 3 && void 0 !== i ? i : [8, 4]; var r = arguments.length > 4 && void 0 !== r ? r : 'odd'; var e = arguments.length > 5 && void 0 !== e ? e : 'RightDown'; var i = m(i, 2); const u = i[0]; const v = i[1] * n; const d = Number(r === 'odd'); const h = U[r] || U.def; const l = o[0];return I(t, o, e, function(n, t) {return[h(n, t, d, l) * u, t * v, n, t];});}const j = [[1, 0, 10], [0, 1, 10], [0, -1, 10], [-1, 0, 10], [-1, -1, 14], [-1, 1, 14], [1, -1, 14], [1, 1, 14]];M = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; const l = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t, o, i, r) {return!0;}; let o = (e = m(n, 2))[0]; const i = void 0 === o ? 0 : o; const r = void 0 === (o = e[1]) ? 0 : o; var e = m(t, 2); const a = void 0 === (o = e[0]) ? 0 : o; const g = void 0 === (e = e[1]) ? 0 : e;if(i === a && r === g)return[n];if(Math.abs(i % 1) !== Math.abs(a % 1) || Math.abs(r % 1) !== Math.abs(g % 1))return[];const f = {}; const c = {};f[n.join()] = 0;for(var u = [n], v = [];u.length;)for(let d = u.pop(), h = (function(n, t) {for(var o = [], i = f[n + ',' + t], r = 0;r < 8;r++) {var e = j[r]; const u = n + e[0]; const v = t + e[1]; const d = e[2]; const h = u + ',' + v; var e = f[h];if(l(u, v, d, n, t) && (void 0 === e || i + d < e) && (f[h] = i + d, c[h] = [n, t], o.push([u, v]), u === a && v === g))break;}return o;}(d[0], d[1])), s = h.length, p = 0;p < s;p++) {const y = h[p];if(y[0] === a && y[1] === g) {v.push(t);for(let b = t;b[0] !== i || b[1] !== r;)b = c[b.join()], v.unshift(b);return v;}u.unshift(y);}return v;};n.PI = l, n.PI_DBL = a, n.PI_HALF = g, n.PI_OA = c, n.PI_OPF = f, n._half_precision = v, n.angle2Radian = s, n.getDiagonalUnitsByRowCol = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t) {return[n, t];}; const u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function() {return!0;}; const v = Math.round(n / 2) - n % 2; const d = Math.round(t / 2) - t % 2;return r(n, t, o, function(n, t, o, i, r, e) {return u(n, t, o, i, r, e) && Math.abs(n) / v + Math.abs(t) / d <= 1;});}, n.getEllipsePoint = p, n.getEllipsePointByAngle = function(n, t, o, i, r) {return p(n, t, o, i, s(r));}, n.getHexagonPoints = function() {return x(R, arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 'y');}, n.getHexagonPositions = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 0]; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [8, 4]; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'RightDown';return S(0.75, n, t, o, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 'odd', i);}, n.getIsometricRhombusPositions = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 0]; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [8, 4]; const i = o[0] / 2; const r = o[1] / 2;return I(n, t, arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'RightDown', function(n, t) {return[(n + t) * i, (t - n) * r, n, t];});}, n.getNeighbourUnitsByRowCol = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t) {return[n, t];}; const u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function() {return!0;};return r(n + 2, t + 2, o, function(n, t, o, i, r, e) {return u(n, t, o, i, r, e) && (o === 1 || o === r || i === 1 || i === e);});}, n.getRectPoints = function() {return x(P, arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1);}, n.getRectPositions = function() {return S(1, arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0], arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 0], arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [8, 4], 'none', arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'RightDown');}, n.getRhombusPoints = function() {return x(w, arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1);}, n.getRhombusPositions = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0, 0]; const o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [8, 4]; const i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 'RightDown';return S(b, n, t, o, arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 'odd', i);}, n.getStaggeredUnitsByRowCol = function() {for(var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1, t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1, o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t) {return[n, t];}, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function(n, t) {return!0;}, r = [], e = -Math.floor(n / 2), u = n + e - 1, v = -Math.floor(t / 2), d = t + v - 1, h = [1, 1], l = [0, 0], a = v;a <= d;a++)for(let g = 0.5 * a, f = Math.abs(g % 1) === 0.5 ? 0.5 : 0, c = e;c <= u;c++) {var s = m(y([c + f, g], h, l), 2); const p = s[0]; var s = s[1];i(p, s, c, a, e, v, u, d, n, t) && r.push(o(p, s, c, a, e, v, u, d, n, t));}return r;}, n.getUnitsByDiagonal = function() {for(var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : function(n, t) {return[n, t];}, i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : function() {return!0;}, r = m(n, 2), e = void 0 === (u = r[0]) ? 0 : u, u = void 0 === (v = r[1]) ? 0 : v, r = m(t, 2), v = void 0 === (v = r[0]) ? 0 : v, r = void 0 === (r = r[1]) ? 0 : r, d = Math.min(e, v), h = Math.max(e, v), l = Math.min(u, r), a = Math.max(u, r), g = [], f = d;f <= h;f++)for(let c = l;c <= a;c++)i(f, c, d, l, h, a, n, t) && g.push(o(f, c, d, l, h, a, n, t));return g;}, n.getUnitsByRowCol = r, n.hexagonPoints = R, n.pixel2unit = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [10, 10]; const i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [0, 0];return n.map(function(n, t) {return v((n - i[t]) / o[t]);});}, n.radian2Angle = function() {return(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0) / c;}, n.rectPoints = P, n.rhombusPixel2unit = y, n.rhombusPoints = w, n.rotateUnit = function() {var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; var o = m(n, 2); var n = void 0 === (i = o[0]) ? 0 : i; var o = void 0 === (i = o[1]) ? 0 : i; var i = t * u; var t = 10 * Math.sin(i); var i = 10 * Math.cos(i);return[Math.round(n * i - o * t) / 10, Math.round(n * t + o * i) / 10];}, n.searchPath = M, n.staggeredUnitRound = function() {var n = m(arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [], 2); const t = void 0 === (v = n[0]) ? 0 : v; var o = void 0 === (e = n[1]) ? 0 : e; var i = m(arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], 2); var r = void 0 === (u = i[0]) ? 78 : u; var n = void 0 === (v = i[1]) ? 40 : v; var e = m(arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [], 2); var i = void 0 === (u = e[0]) ? 0 : u; var u = void 0 === (v = e[1]) ? 0 : v; var e = r / 2; var v = n / 2; var o = Math.round(o / v) * v; var r = Math.round(t / r) * r;return o % n == v && (r += t - r >= 0 ? e : -e), [r + i, o + u];}, n.twoDimForEach = I, n.unit2pixel = function() {const n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [0, 0]; const o = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [10, 10]; const i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [0, 0];return n.map(function(n, t) {return v(n * o[t] + i[t]);});}, n.unit2rhombusPixel = function() {var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : []; var i = m(n, 2); const r = void 0 === (e = i[0]) ? 0 : e; var n = void 0 === (u = i[1]) ? 0 : u; var e = m(t, 2); var u = void 0 === (i = e[0]) ? 10 : i; var i = void 0 === (t = e[1]) ? 10 : t; var t = (e = m(o, 2))[0]; var e = void 0 === (o = e[1]) ? 0 : o; var o = (r + n) * d;return[v((r - n) * d * h * u + (void 0 === t ? 0 : t)), v(o * h * i + e)];}, Object.defineProperty(n, '__esModule', {value: !0});}));
